#pragma once

#include "ivi-logging.h"
#include "ivi-logging-console.h"
#include "ivi-logging-null.h"

@BACKEND_DEFINES@

#ifdef IVI_LOGGING_DLT_AVAILABLE
#include "ivi-logging-dlt.h"
#endif

namespace logging {

using namespace logging;

class DefaultConsoleLogContext : public ConsoleLogContext {
public:
	DefaultConsoleLogContext() {
		// Enable debug logs for the console output, which are disabled by default
		setLogLevel(LogLevel::Debug);
	}

};

class DefaultConsoleLogData : public ConsoleLogData {
public:
	DefaultConsoleLogData() {
		//		setPrefixFormat("[%s] %.4s | ");
		//		setSuffixFormat("  %s / %s - %d");
	}

	//	void writePrefix() override {	}
	//	void writeSuffix() override {	}

};

typedef LogContextT<
	TypeSet<@LOG_CONTEXTS@>, TypeSet<@LOG_CONTEXTS_LOG_DATA_TYPES@> > DefaultLogContext;

/// Use that type to output to the DLT if DLT is enabled, or to 
typedef LogContextT<
	TypeSet<@LOG_CONTEXTS_DLT_ONLY@>, TypeSet<@LOG_CONTEXTS_LOG_DATA_TYPES_DLT_ONLY@> > DltIfEnabledLogContext;

}

